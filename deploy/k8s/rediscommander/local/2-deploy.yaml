kind: Service
apiVersion: v1
metadata:
  name: redis-commander
  namespace: default
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 8081
      targetPort: client
      nodePort: 31081
  selector:
    app: redis-commander

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-commander
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      containers:
        - name: redis-commander
          image: rediscommander/redis-commander:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64M"
              cpu: "100m"
            limits:
              memory: "512M"
              cpu: "1"
          env:
            - name: URL_PREFIX
              value: "/"
            - name: REDIS_HOSTS
              valueFrom:
                secretKeyRef:
                  name: redis-commander
                  key: REDIS_HOSTS
            - name: HTTP_USER
              valueFrom:
                secretKeyRef:
                  name: redis-commander
                  key: HTTP_USER
            - name: HTTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-commander
                  key: HTTP_PASSWORD
          ports:
            - containerPort: 8081
              name: client
              protocol: TCP
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
